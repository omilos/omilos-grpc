// User wants to fetch certificates, and credits

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.20.1
// source: omilos.proto

package omilos_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReactionType int32

const (
	ReactionType_UNSPECIFIED ReactionType = 0
	ReactionType_LIKE        ReactionType = 1
)

// Enum value maps for ReactionType.
var (
	ReactionType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "LIKE",
	}
	ReactionType_value = map[string]int32{
		"UNSPECIFIED": 0,
		"LIKE":        1,
	}
)

func (x ReactionType) Enum() *ReactionType {
	p := new(ReactionType)
	*p = x
	return p
}

func (x ReactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_omilos_proto_enumTypes[0].Descriptor()
}

func (ReactionType) Type() protoreflect.EnumType {
	return &file_omilos_proto_enumTypes[0]
}

func (x ReactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReactionType.Descriptor instead.
func (ReactionType) EnumDescriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{0}
}

type GetCastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *GetCastRequest) Reset() {
	*x = GetCastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCastRequest) ProtoMessage() {}

func (x *GetCastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCastRequest.ProtoReflect.Descriptor instead.
func (*GetCastRequest) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{0}
}

func (x *GetCastRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetCastsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string                  `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Next     bool                    `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
	Fid      *wrapperspb.UInt32Value `protobuf:"bytes,3,opt,name=fid,proto3" json:"fid,omitempty"`
	Username *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Parent   *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=parent,proto3" json:"parent,omitempty"`
	Thread   *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=thread,proto3" json:"thread,omitempty"`
	LikedBy  *wrapperspb.UInt32Value `protobuf:"bytes,7,opt,name=liked_by,json=likedBy,proto3" json:"liked_by,omitempty"`
	Trending bool                    `protobuf:"varint,8,opt,name=trending,proto3" json:"trending,omitempty"`
	Me       bool                    `protobuf:"varint,9,opt,name=me,proto3" json:"me,omitempty"`
}

func (x *GetCastsRequest) Reset() {
	*x = GetCastsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCastsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCastsRequest) ProtoMessage() {}

func (x *GetCastsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCastsRequest.ProtoReflect.Descriptor instead.
func (*GetCastsRequest) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{1}
}

func (x *GetCastsRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *GetCastsRequest) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *GetCastsRequest) GetFid() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Fid
	}
	return nil
}

func (x *GetCastsRequest) GetUsername() *wrapperspb.StringValue {
	if x != nil {
		return x.Username
	}
	return nil
}

func (x *GetCastsRequest) GetParent() *wrapperspb.StringValue {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *GetCastsRequest) GetThread() *wrapperspb.StringValue {
	if x != nil {
		return x.Thread
	}
	return nil
}

func (x *GetCastsRequest) GetLikedBy() *wrapperspb.UInt32Value {
	if x != nil {
		return x.LikedBy
	}
	return nil
}

func (x *GetCastsRequest) GetTrending() bool {
	if x != nil {
		return x.Trending
	}
	return false
}

func (x *GetCastsRequest) GetMe() bool {
	if x != nil {
		return x.Me
	}
	return false
}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid      *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=fid,proto3" json:"fid,omitempty"`
	Username *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserRequest) GetFid() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Fid
	}
	return nil
}

func (x *GetUserRequest) GetUsername() *wrapperspb.StringValue {
	if x != nil {
		return x.Username
	}
	return nil
}

type Casts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Casts []*Cast `protobuf:"bytes,1,rep,name=casts,proto3" json:"casts,omitempty"`
}

func (x *Casts) Reset() {
	*x = Casts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Casts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Casts) ProtoMessage() {}

func (x *Casts) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Casts.ProtoReflect.Descriptor instead.
func (*Casts) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{3}
}

func (x *Casts) GetCasts() []*Cast {
	if x != nil {
		return x.Casts
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid            uint32          `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
	Username       string          `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	DisplayName    string          `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ProfilePicture *ProfilePicture `protobuf:"bytes,4,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
	Profile        *Profile        `protobuf:"bytes,5,opt,name=profile,proto3" json:"profile,omitempty"`
	FollowerCount  uint32          `protobuf:"varint,6,opt,name=follower_count,json=followerCount,proto3" json:"follower_count,omitempty"`
	FollowingCount uint32          `protobuf:"varint,7,opt,name=following_count,json=followingCount,proto3" json:"following_count,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{4}
}

func (x *User) GetFid() uint32 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *User) GetProfilePicture() *ProfilePicture {
	if x != nil {
		return x.ProfilePicture
	}
	return nil
}

func (x *User) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *User) GetFollowerCount() uint32 {
	if x != nil {
		return x.FollowerCount
	}
	return 0
}

func (x *User) GetFollowingCount() uint32 {
	if x != nil {
		return x.FollowingCount
	}
	return 0
}

type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bio string `protobuf:"bytes,1,opt,name=bio,proto3" json:"bio,omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{5}
}

func (x *Profile) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

type Cast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash          string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	ThreadHash    string                 `protobuf:"bytes,2,opt,name=thread_hash,json=threadHash,proto3" json:"thread_hash,omitempty"`
	ParentHash    string                 `protobuf:"bytes,3,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	Author        *Author                `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	Text          string                 `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	PublishedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	Replies       uint64                 `protobuf:"varint,7,opt,name=replies,proto3" json:"replies,omitempty"`
	Reactions     uint64                 `protobuf:"varint,8,opt,name=reactions,proto3" json:"reactions,omitempty"`
	Recasts       uint64                 `protobuf:"varint,9,opt,name=recasts,proto3" json:"recasts,omitempty"` // TODO
	Watches       uint64                 `protobuf:"varint,10,opt,name=watches,proto3" json:"watches,omitempty"`
	Recast        bool                   `protobuf:"varint,11,opt,name=recast,proto3" json:"recast,omitempty"`
	ViewerContext *ViewerContext         `protobuf:"bytes,12,opt,name=viewer_context,json=viewerContext,proto3" json:"viewer_context,omitempty"`
}

func (x *Cast) Reset() {
	*x = Cast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cast) ProtoMessage() {}

func (x *Cast) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cast.ProtoReflect.Descriptor instead.
func (*Cast) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{6}
}

func (x *Cast) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Cast) GetThreadHash() string {
	if x != nil {
		return x.ThreadHash
	}
	return ""
}

func (x *Cast) GetParentHash() string {
	if x != nil {
		return x.ParentHash
	}
	return ""
}

func (x *Cast) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Cast) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Cast) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *Cast) GetReplies() uint64 {
	if x != nil {
		return x.Replies
	}
	return 0
}

func (x *Cast) GetReactions() uint64 {
	if x != nil {
		return x.Reactions
	}
	return 0
}

func (x *Cast) GetRecasts() uint64 {
	if x != nil {
		return x.Recasts
	}
	return 0
}

func (x *Cast) GetWatches() uint64 {
	if x != nil {
		return x.Watches
	}
	return 0
}

func (x *Cast) GetRecast() bool {
	if x != nil {
		return x.Recast
	}
	return false
}

func (x *Cast) GetViewerContext() *ViewerContext {
	if x != nil {
		return x.ViewerContext
	}
	return nil
}

type ViewerContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reacted bool `protobuf:"varint,1,opt,name=reacted,proto3" json:"reacted,omitempty"`
	Recast  bool `protobuf:"varint,2,opt,name=recast,proto3" json:"recast,omitempty"`
	Watched bool `protobuf:"varint,3,opt,name=watched,proto3" json:"watched,omitempty"`
}

func (x *ViewerContext) Reset() {
	*x = ViewerContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewerContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewerContext) ProtoMessage() {}

func (x *ViewerContext) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewerContext.ProtoReflect.Descriptor instead.
func (*ViewerContext) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{7}
}

func (x *ViewerContext) GetReacted() bool {
	if x != nil {
		return x.Reacted
	}
	return false
}

func (x *ViewerContext) GetRecast() bool {
	if x != nil {
		return x.Recast
	}
	return false
}

func (x *ViewerContext) GetWatched() bool {
	if x != nil {
		return x.Watched
	}
	return false
}

type Author struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid            uint64          `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
	Username       string          `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	DisplayName    string          `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ProfilePicture *ProfilePicture `protobuf:"bytes,4,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
	FollowerCount  uint64          `protobuf:"varint,5,opt,name=follower_count,json=followerCount,proto3" json:"follower_count,omitempty"`
	FollowingCount uint64          `protobuf:"varint,6,opt,name=following_count,json=followingCount,proto3" json:"following_count,omitempty"`
}

func (x *Author) Reset() {
	*x = Author{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Author) ProtoMessage() {}

func (x *Author) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Author.ProtoReflect.Descriptor instead.
func (*Author) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{8}
}

func (x *Author) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *Author) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Author) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Author) GetProfilePicture() *ProfilePicture {
	if x != nil {
		return x.ProfilePicture
	}
	return nil
}

func (x *Author) GetFollowerCount() uint64 {
	if x != nil {
		return x.FollowerCount
	}
	return 0
}

func (x *Author) GetFollowingCount() uint64 {
	if x != nil {
		return x.FollowingCount
	}
	return 0
}

type ProfilePicture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Verified bool   `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *ProfilePicture) Reset() {
	*x = ProfilePicture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfilePicture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfilePicture) ProtoMessage() {}

func (x *ProfilePicture) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfilePicture.ProtoReflect.Descriptor instead.
func (*ProfilePicture) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{9}
}

func (x *ProfilePicture) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ProfilePicture) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

var File_omilos_proto protoreflect.FileDescriptor

var file_omilos_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x24, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x22, 0xfd, 0x02, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x37, 0x0a,
	0x08, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x6c,
	0x69, 0x6b, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6d, 0x65, 0x22, 0x7a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x03, 0x66, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x30,
	0x0a, 0x05, 0x43, 0x61, 0x73, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x63, 0x61, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x52, 0x05, 0x63, 0x61, 0x73, 0x74, 0x73,
	0x22, 0x9d, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x2e, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x1b, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62,
	0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x22, 0xa3, 0x03,
	0x0a, 0x04, 0x43, 0x61, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2b, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f,
	0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x3d, 0x0a,
	0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x12, 0x41, 0x0a, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f,
	0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x22, 0x5b, 0x0a, 0x0d, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x61, 0x63, 0x74, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x22, 0xef, 0x01, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x2a, 0x29, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4b, 0x45, 0x10, 0x01, 0x32, 0xc2, 0x01,
	0x0a, 0x06, 0x4f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x12, 0x3b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x74,
	0x12, 0x1b, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e,
	0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x73, 0x74,
	0x22, 0x00, 0x12, 0x3e, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x74, 0x73, 0x12, 0x1c,
	0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6f,
	0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x73,
	0x22, 0x00, 0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x2f, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x2d, 0x67,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_omilos_proto_rawDescOnce sync.Once
	file_omilos_proto_rawDescData = file_omilos_proto_rawDesc
)

func file_omilos_proto_rawDescGZIP() []byte {
	file_omilos_proto_rawDescOnce.Do(func() {
		file_omilos_proto_rawDescData = protoimpl.X.CompressGZIP(file_omilos_proto_rawDescData)
	})
	return file_omilos_proto_rawDescData
}

var file_omilos_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_omilos_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_omilos_proto_goTypes = []interface{}{
	(ReactionType)(0),              // 0: omilos_grpc.ReactionType
	(*GetCastRequest)(nil),         // 1: omilos_grpc.GetCastRequest
	(*GetCastsRequest)(nil),        // 2: omilos_grpc.GetCastsRequest
	(*GetUserRequest)(nil),         // 3: omilos_grpc.GetUserRequest
	(*Casts)(nil),                  // 4: omilos_grpc.Casts
	(*User)(nil),                   // 5: omilos_grpc.User
	(*Profile)(nil),                // 6: omilos_grpc.Profile
	(*Cast)(nil),                   // 7: omilos_grpc.Cast
	(*ViewerContext)(nil),          // 8: omilos_grpc.ViewerContext
	(*Author)(nil),                 // 9: omilos_grpc.Author
	(*ProfilePicture)(nil),         // 10: omilos_grpc.ProfilePicture
	(*wrapperspb.UInt32Value)(nil), // 11: google.protobuf.UInt32Value
	(*wrapperspb.StringValue)(nil), // 12: google.protobuf.StringValue
	(*timestamppb.Timestamp)(nil),  // 13: google.protobuf.Timestamp
}
var file_omilos_proto_depIdxs = []int32{
	11, // 0: omilos_grpc.GetCastsRequest.fid:type_name -> google.protobuf.UInt32Value
	12, // 1: omilos_grpc.GetCastsRequest.username:type_name -> google.protobuf.StringValue
	12, // 2: omilos_grpc.GetCastsRequest.parent:type_name -> google.protobuf.StringValue
	12, // 3: omilos_grpc.GetCastsRequest.thread:type_name -> google.protobuf.StringValue
	11, // 4: omilos_grpc.GetCastsRequest.liked_by:type_name -> google.protobuf.UInt32Value
	11, // 5: omilos_grpc.GetUserRequest.fid:type_name -> google.protobuf.UInt32Value
	12, // 6: omilos_grpc.GetUserRequest.username:type_name -> google.protobuf.StringValue
	7,  // 7: omilos_grpc.Casts.casts:type_name -> omilos_grpc.Cast
	10, // 8: omilos_grpc.User.profile_picture:type_name -> omilos_grpc.ProfilePicture
	6,  // 9: omilos_grpc.User.profile:type_name -> omilos_grpc.Profile
	9,  // 10: omilos_grpc.Cast.author:type_name -> omilos_grpc.Author
	13, // 11: omilos_grpc.Cast.published_at:type_name -> google.protobuf.Timestamp
	8,  // 12: omilos_grpc.Cast.viewer_context:type_name -> omilos_grpc.ViewerContext
	10, // 13: omilos_grpc.Author.profile_picture:type_name -> omilos_grpc.ProfilePicture
	3,  // 14: omilos_grpc.Omilos.GetUser:input_type -> omilos_grpc.GetUserRequest
	1,  // 15: omilos_grpc.Omilos.GetCast:input_type -> omilos_grpc.GetCastRequest
	2,  // 16: omilos_grpc.Omilos.GetCasts:input_type -> omilos_grpc.GetCastsRequest
	5,  // 17: omilos_grpc.Omilos.GetUser:output_type -> omilos_grpc.User
	7,  // 18: omilos_grpc.Omilos.GetCast:output_type -> omilos_grpc.Cast
	4,  // 19: omilos_grpc.Omilos.GetCasts:output_type -> omilos_grpc.Casts
	17, // [17:20] is the sub-list for method output_type
	14, // [14:17] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_omilos_proto_init() }
func file_omilos_proto_init() {
	if File_omilos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_omilos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCastsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Casts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewerContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Author); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfilePicture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_omilos_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_omilos_proto_goTypes,
		DependencyIndexes: file_omilos_proto_depIdxs,
		EnumInfos:         file_omilos_proto_enumTypes,
		MessageInfos:      file_omilos_proto_msgTypes,
	}.Build()
	File_omilos_proto = out.File
	file_omilos_proto_rawDesc = nil
	file_omilos_proto_goTypes = nil
	file_omilos_proto_depIdxs = nil
}
