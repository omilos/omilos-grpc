// User wants to fetch certificates, and credits

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.21.12
// source: omilos.proto

package omilos_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReactionType int32

const (
	ReactionType_UNSPECIFIED_REACTION_TYPE ReactionType = 0
	ReactionType_LIKE                      ReactionType = 1
	ReactionType_RECAST                    ReactionType = 2
)

// Enum value maps for ReactionType.
var (
	ReactionType_name = map[int32]string{
		0: "UNSPECIFIED_REACTION_TYPE",
		1: "LIKE",
		2: "RECAST",
	}
	ReactionType_value = map[string]int32{
		"UNSPECIFIED_REACTION_TYPE": 0,
		"LIKE":                      1,
		"RECAST":                    2,
	}
)

func (x ReactionType) Enum() *ReactionType {
	p := new(ReactionType)
	*p = x
	return p
}

func (x ReactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_omilos_proto_enumTypes[0].Descriptor()
}

func (ReactionType) Type() protoreflect.EnumType {
	return &file_omilos_proto_enumTypes[0]
}

func (x ReactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReactionType.Descriptor instead.
func (ReactionType) EnumDescriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{0}
}

type NotificationType int32

const (
	NotificationType_UNSPECIFIED_NOTIFICATION_TYPE NotificationType = 0
	NotificationType_CAST_MENTION                  NotificationType = 1
	NotificationType_CAST_LIKE                     NotificationType = 2
	NotificationType_CAST_REPLY                    NotificationType = 3
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "UNSPECIFIED_NOTIFICATION_TYPE",
		1: "CAST_MENTION",
		2: "CAST_LIKE",
		3: "CAST_REPLY",
	}
	NotificationType_value = map[string]int32{
		"UNSPECIFIED_NOTIFICATION_TYPE": 0,
		"CAST_MENTION":                  1,
		"CAST_LIKE":                     2,
		"CAST_REPLY":                    3,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_omilos_proto_enumTypes[1].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_omilos_proto_enumTypes[1]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{1}
}

type CastStreamType int32

const (
	CastStreamType_UNSPECIFIED_CAST_STREAM_TYPE CastStreamType = 0
	CastStreamType_CHILDREN                     CastStreamType = 1
	CastStreamType_THREAD_CASTS                 CastStreamType = 2
	CastStreamType_USER_THREADS                 CastStreamType = 3
	CastStreamType_USER_LIKES                   CastStreamType = 4
	CastStreamType_USER_REPLIES                 CastStreamType = 5
	CastStreamType_LATEST                       CastStreamType = 6
	CastStreamType_TRENDING                     CastStreamType = 7
	CastStreamType_HIGHLIGHTS                   CastStreamType = 8
	CastStreamType_RECOMMENDED                  CastStreamType = 9
	CastStreamType_BOOKMARKED                   CastStreamType = 10
	CastStreamType_SEARCH                       CastStreamType = 11
)

// Enum value maps for CastStreamType.
var (
	CastStreamType_name = map[int32]string{
		0:  "UNSPECIFIED_CAST_STREAM_TYPE",
		1:  "CHILDREN",
		2:  "THREAD_CASTS",
		3:  "USER_THREADS",
		4:  "USER_LIKES",
		5:  "USER_REPLIES",
		6:  "LATEST",
		7:  "TRENDING",
		8:  "HIGHLIGHTS",
		9:  "RECOMMENDED",
		10: "BOOKMARKED",
		11: "SEARCH",
	}
	CastStreamType_value = map[string]int32{
		"UNSPECIFIED_CAST_STREAM_TYPE": 0,
		"CHILDREN":                     1,
		"THREAD_CASTS":                 2,
		"USER_THREADS":                 3,
		"USER_LIKES":                   4,
		"USER_REPLIES":                 5,
		"LATEST":                       6,
		"TRENDING":                     7,
		"HIGHLIGHTS":                   8,
		"RECOMMENDED":                  9,
		"BOOKMARKED":                   10,
		"SEARCH":                       11,
	}
)

func (x CastStreamType) Enum() *CastStreamType {
	p := new(CastStreamType)
	*p = x
	return p
}

func (x CastStreamType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CastStreamType) Descriptor() protoreflect.EnumDescriptor {
	return file_omilos_proto_enumTypes[2].Descriptor()
}

func (CastStreamType) Type() protoreflect.EnumType {
	return &file_omilos_proto_enumTypes[2]
}

func (x CastStreamType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CastStreamType.Descriptor instead.
func (CastStreamType) EnumDescriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{2}
}

type NotificationStreamType int32

const (
	NotificationStreamType_UNSPECIFIED_NOTIFICATION_STREAM_TYPE NotificationStreamType = 0
	NotificationStreamType_ALL                                  NotificationStreamType = 1
	NotificationStreamType_CONVERSATIONS                        NotificationStreamType = 2
)

// Enum value maps for NotificationStreamType.
var (
	NotificationStreamType_name = map[int32]string{
		0: "UNSPECIFIED_NOTIFICATION_STREAM_TYPE",
		1: "ALL",
		2: "CONVERSATIONS",
	}
	NotificationStreamType_value = map[string]int32{
		"UNSPECIFIED_NOTIFICATION_STREAM_TYPE": 0,
		"ALL":                                  1,
		"CONVERSATIONS":                        2,
	}
)

func (x NotificationStreamType) Enum() *NotificationStreamType {
	p := new(NotificationStreamType)
	*p = x
	return p
}

func (x NotificationStreamType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationStreamType) Descriptor() protoreflect.EnumDescriptor {
	return file_omilos_proto_enumTypes[3].Descriptor()
}

func (NotificationStreamType) Type() protoreflect.EnumType {
	return &file_omilos_proto_enumTypes[3]
}

func (x NotificationStreamType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationStreamType.Descriptor instead.
func (NotificationStreamType) EnumDescriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{3}
}

type CastIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *wrapperspb.Int64Value  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hash      *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	AuthorFid *wrapperspb.Int64Value  `protobuf:"bytes,3,opt,name=author_fid,json=authorFid,proto3" json:"author_fid,omitempty"`
}

func (x *CastIdentifier) Reset() {
	*x = CastIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CastIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CastIdentifier) ProtoMessage() {}

func (x *CastIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CastIdentifier.ProtoReflect.Descriptor instead.
func (*CastIdentifier) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{0}
}

func (x *CastIdentifier) GetId() *wrapperspb.Int64Value {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CastIdentifier) GetHash() *wrapperspb.StringValue {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *CastIdentifier) GetAuthorFid() *wrapperspb.Int64Value {
	if x != nil {
		return x.AuthorFid
	}
	return nil
}

type Notifications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
}

func (x *Notifications) Reset() {
	*x = Notifications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notifications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notifications) ProtoMessage() {}

func (x *Notifications) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notifications.ProtoReflect.Descriptor instead.
func (*Notifications) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{1}
}

func (x *Notifications) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                NotificationType       `protobuf:"varint,1,opt,name=type,proto3,enum=omilos_grpc.NotificationType" json:"type,omitempty"`
	CastId              uint64                 `protobuf:"varint,2,opt,name=cast_id,json=castId,proto3" json:"cast_id,omitempty"`
	ActorDisplayName    string                 `protobuf:"bytes,3,opt,name=actor_display_name,json=actorDisplayName,proto3" json:"actor_display_name,omitempty"`
	ActorProfilePicture *ProfilePicture        `protobuf:"bytes,4,opt,name=actor_profile_picture,json=actorProfilePicture,proto3" json:"actor_profile_picture,omitempty"`
	ActorFid            uint32                 `protobuf:"varint,5,opt,name=actor_fid,json=actorFid,proto3" json:"actor_fid,omitempty"`
	Timestamp           *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Acknowledged        bool                   `protobuf:"varint,7,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{2}
}

func (x *Notification) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_UNSPECIFIED_NOTIFICATION_TYPE
}

func (x *Notification) GetCastId() uint64 {
	if x != nil {
		return x.CastId
	}
	return 0
}

func (x *Notification) GetActorDisplayName() string {
	if x != nil {
		return x.ActorDisplayName
	}
	return ""
}

func (x *Notification) GetActorProfilePicture() *ProfilePicture {
	if x != nil {
		return x.ActorProfilePicture
	}
	return nil
}

func (x *Notification) GetActorFid() uint32 {
	if x != nil {
		return x.ActorFid
	}
	return 0
}

func (x *Notification) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Notification) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

type UserIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid      *wrapperspb.Int64Value  `protobuf:"bytes,1,opt,name=fid,proto3" json:"fid,omitempty"`
	Username *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *UserIdentifier) Reset() {
	*x = UserIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdentifier) ProtoMessage() {}

func (x *UserIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdentifier.ProtoReflect.Descriptor instead.
func (*UserIdentifier) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{3}
}

func (x *UserIdentifier) GetFid() *wrapperspb.Int64Value {
	if x != nil {
		return x.Fid
	}
	return nil
}

func (x *UserIdentifier) GetUsername() *wrapperspb.StringValue {
	if x != nil {
		return x.Username
	}
	return nil
}

type Publications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Publications []*Publication `protobuf:"bytes,1,rep,name=publications,proto3" json:"publications,omitempty"`
}

func (x *Publications) Reset() {
	*x = Publications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Publications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publications) ProtoMessage() {}

func (x *Publications) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publications.ProtoReflect.Descriptor instead.
func (*Publications) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{4}
}

func (x *Publications) GetPublications() []*Publication {
	if x != nil {
		return x.Publications
	}
	return nil
}

type Publication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Excerpt     string                 `protobuf:"bytes,3,opt,name=excerpt,proto3" json:"excerpt,omitempty"`
	Url         string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Author      *Author                `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	Platform    string                 `protobuf:"bytes,6,opt,name=platform,proto3" json:"platform,omitempty"`
	PublishedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
}

func (x *Publication) Reset() {
	*x = Publication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Publication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publication) ProtoMessage() {}

func (x *Publication) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publication.ProtoReflect.Descriptor instead.
func (*Publication) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{5}
}

func (x *Publication) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Publication) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Publication) GetExcerpt() string {
	if x != nil {
		return x.Excerpt
	}
	return ""
}

func (x *Publication) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Publication) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Publication) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Publication) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

type Casts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Casts []*Cast `protobuf:"bytes,1,rep,name=casts,proto3" json:"casts,omitempty"`
}

func (x *Casts) Reset() {
	*x = Casts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Casts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Casts) ProtoMessage() {}

func (x *Casts) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Casts.ProtoReflect.Descriptor instead.
func (*Casts) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{6}
}

func (x *Casts) GetCasts() []*Cast {
	if x != nil {
		return x.Casts
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid            uint32          `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
	Username       string          `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	DisplayName    string          `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ProfilePicture *ProfilePicture `protobuf:"bytes,4,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
	Profile        *Profile        `protobuf:"bytes,5,opt,name=profile,proto3" json:"profile,omitempty"`
	FollowerCount  uint32          `protobuf:"varint,6,opt,name=follower_count,json=followerCount,proto3" json:"follower_count,omitempty"`
	FollowingCount uint32          `protobuf:"varint,7,opt,name=following_count,json=followingCount,proto3" json:"following_count,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{7}
}

func (x *User) GetFid() uint32 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *User) GetProfilePicture() *ProfilePicture {
	if x != nil {
		return x.ProfilePicture
	}
	return nil
}

func (x *User) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *User) GetFollowerCount() uint32 {
	if x != nil {
		return x.FollowerCount
	}
	return 0
}

func (x *User) GetFollowingCount() uint32 {
	if x != nil {
		return x.FollowingCount
	}
	return 0
}

type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bio string `protobuf:"bytes,1,opt,name=bio,proto3" json:"bio,omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{8}
}

func (x *Profile) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

type Cast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Hash                    string                  `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	RootParentHash          string                  `protobuf:"bytes,3,opt,name=root_parent_hash,json=rootParentHash,proto3" json:"root_parent_hash,omitempty"`
	RootParentUrl           string                  `protobuf:"bytes,4,opt,name=root_parent_url,json=rootParentUrl,proto3" json:"root_parent_url,omitempty"`
	RootParentId            *wrapperspb.Int64Value  `protobuf:"bytes,5,opt,name=root_parent_id,json=rootParentId,proto3" json:"root_parent_id,omitempty"`
	ParentId                *wrapperspb.Int64Value  `protobuf:"bytes,6,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	AuthorId                int64                   `protobuf:"varint,7,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Text                    string                  `protobuf:"bytes,8,opt,name=text,proto3" json:"text,omitempty"`
	PublishedAt             *timestamppb.Timestamp  `protobuf:"bytes,9,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	Replies                 uint64                  `protobuf:"varint,10,opt,name=replies,proto3" json:"replies,omitempty"`
	Reactions               uint64                  `protobuf:"varint,11,opt,name=reactions,proto3" json:"reactions,omitempty"`
	Recasts                 uint64                  `protobuf:"varint,12,opt,name=recasts,proto3" json:"recasts,omitempty"` // TODO
	Watches                 uint64                  `protobuf:"varint,13,opt,name=watches,proto3" json:"watches,omitempty"`
	Recast                  bool                    `protobuf:"varint,14,opt,name=recast,proto3" json:"recast,omitempty"`
	ViewerContext           *ViewerContext          `protobuf:"bytes,15,opt,name=viewer_context,json=viewerContext,proto3" json:"viewer_context,omitempty"`
	Author                  *Author                 `protobuf:"bytes,16,opt,name=author,proto3" json:"author,omitempty"`
	ParentAuthorDisplayName *wrapperspb.StringValue `protobuf:"bytes,17,opt,name=parent_author_display_name,json=parentAuthorDisplayName,proto3" json:"parent_author_display_name,omitempty"`
	ParentAuthorFid         *wrapperspb.Int64Value  `protobuf:"bytes,18,opt,name=parent_author_fid,json=parentAuthorFid,proto3" json:"parent_author_fid,omitempty"`
}

func (x *Cast) Reset() {
	*x = Cast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cast) ProtoMessage() {}

func (x *Cast) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cast.ProtoReflect.Descriptor instead.
func (*Cast) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{9}
}

func (x *Cast) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Cast) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Cast) GetRootParentHash() string {
	if x != nil {
		return x.RootParentHash
	}
	return ""
}

func (x *Cast) GetRootParentUrl() string {
	if x != nil {
		return x.RootParentUrl
	}
	return ""
}

func (x *Cast) GetRootParentId() *wrapperspb.Int64Value {
	if x != nil {
		return x.RootParentId
	}
	return nil
}

func (x *Cast) GetParentId() *wrapperspb.Int64Value {
	if x != nil {
		return x.ParentId
	}
	return nil
}

func (x *Cast) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Cast) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Cast) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *Cast) GetReplies() uint64 {
	if x != nil {
		return x.Replies
	}
	return 0
}

func (x *Cast) GetReactions() uint64 {
	if x != nil {
		return x.Reactions
	}
	return 0
}

func (x *Cast) GetRecasts() uint64 {
	if x != nil {
		return x.Recasts
	}
	return 0
}

func (x *Cast) GetWatches() uint64 {
	if x != nil {
		return x.Watches
	}
	return 0
}

func (x *Cast) GetRecast() bool {
	if x != nil {
		return x.Recast
	}
	return false
}

func (x *Cast) GetViewerContext() *ViewerContext {
	if x != nil {
		return x.ViewerContext
	}
	return nil
}

func (x *Cast) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Cast) GetParentAuthorDisplayName() *wrapperspb.StringValue {
	if x != nil {
		return x.ParentAuthorDisplayName
	}
	return nil
}

func (x *Cast) GetParentAuthorFid() *wrapperspb.Int64Value {
	if x != nil {
		return x.ParentAuthorFid
	}
	return nil
}

type ViewerContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Viewed     bool `protobuf:"varint,1,opt,name=viewed,proto3" json:"viewed,omitempty"`
	Recast     bool `protobuf:"varint,2,opt,name=recast,proto3" json:"recast,omitempty"`
	Watched    bool `protobuf:"varint,3,opt,name=watched,proto3" json:"watched,omitempty"`
	Bookmarked bool `protobuf:"varint,4,opt,name=bookmarked,proto3" json:"bookmarked,omitempty"`
	Liked      bool `protobuf:"varint,5,opt,name=liked,proto3" json:"liked,omitempty"`
}

func (x *ViewerContext) Reset() {
	*x = ViewerContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewerContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewerContext) ProtoMessage() {}

func (x *ViewerContext) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewerContext.ProtoReflect.Descriptor instead.
func (*ViewerContext) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{10}
}

func (x *ViewerContext) GetViewed() bool {
	if x != nil {
		return x.Viewed
	}
	return false
}

func (x *ViewerContext) GetRecast() bool {
	if x != nil {
		return x.Recast
	}
	return false
}

func (x *ViewerContext) GetWatched() bool {
	if x != nil {
		return x.Watched
	}
	return false
}

func (x *ViewerContext) GetBookmarked() bool {
	if x != nil {
		return x.Bookmarked
	}
	return false
}

func (x *ViewerContext) GetLiked() bool {
	if x != nil {
		return x.Liked
	}
	return false
}

type Author struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid            int64           `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
	Username       string          `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	DisplayName    string          `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ProfilePicture *ProfilePicture `protobuf:"bytes,4,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
	FollowerCount  uint64          `protobuf:"varint,5,opt,name=follower_count,json=followerCount,proto3" json:"follower_count,omitempty"`
	FollowingCount uint64          `protobuf:"varint,6,opt,name=following_count,json=followingCount,proto3" json:"following_count,omitempty"`
}

func (x *Author) Reset() {
	*x = Author{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Author) ProtoMessage() {}

func (x *Author) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Author.ProtoReflect.Descriptor instead.
func (*Author) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{11}
}

func (x *Author) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *Author) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Author) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Author) GetProfilePicture() *ProfilePicture {
	if x != nil {
		return x.ProfilePicture
	}
	return nil
}

func (x *Author) GetFollowerCount() uint64 {
	if x != nil {
		return x.FollowerCount
	}
	return 0
}

func (x *Author) GetFollowingCount() uint64 {
	if x != nil {
		return x.FollowingCount
	}
	return 0
}

type ProfilePicture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Verified bool   `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *ProfilePicture) Reset() {
	*x = ProfilePicture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfilePicture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfilePicture) ProtoMessage() {}

func (x *ProfilePicture) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfilePicture.ProtoReflect.Descriptor instead.
func (*ProfilePicture) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{12}
}

func (x *ProfilePicture) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ProfilePicture) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

type BaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BaseResponse) Reset() {
	*x = BaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResponse) ProtoMessage() {}

func (x *BaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResponse.ProtoReflect.Descriptor instead.
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{13}
}

type GetMeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMeRequest) Reset() {
	*x = GetMeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeRequest) ProtoMessage() {}

func (x *GetMeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeRequest.ProtoReflect.Descriptor instead.
func (*GetMeRequest) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{14}
}

type GetCastsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string                  `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Next     bool                    `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
	User     *UserIdentifier         `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Cast     *CastIdentifier         `protobuf:"bytes,4,opt,name=cast,proto3" json:"cast,omitempty"`
	Query    *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
	Type     CastStreamType          `protobuf:"varint,6,opt,name=type,proto3,enum=omilos_grpc.CastStreamType" json:"type,omitempty"`
}

func (x *GetCastsRequest) Reset() {
	*x = GetCastsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCastsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCastsRequest) ProtoMessage() {}

func (x *GetCastsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCastsRequest.ProtoReflect.Descriptor instead.
func (*GetCastsRequest) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{15}
}

func (x *GetCastsRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *GetCastsRequest) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *GetCastsRequest) GetUser() *UserIdentifier {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetCastsRequest) GetCast() *CastIdentifier {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *GetCastsRequest) GetQuery() *wrapperspb.StringValue {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *GetCastsRequest) GetType() CastStreamType {
	if x != nil {
		return x.Type
	}
	return CastStreamType_UNSPECIFIED_CAST_STREAM_TYPE
}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid      *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=fid,proto3" json:"fid,omitempty"`
	Username *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserRequest) GetFid() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Fid
	}
	return nil
}

func (x *GetUserRequest) GetUsername() *wrapperspb.StringValue {
	if x != nil {
		return x.Username
	}
	return nil
}

type GetPublicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string          `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Next     bool            `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
	User     *UserIdentifier `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetPublicationsRequest) Reset() {
	*x = GetPublicationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicationsRequest) ProtoMessage() {}

func (x *GetPublicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicationsRequest.ProtoReflect.Descriptor instead.
func (*GetPublicationsRequest) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{17}
}

func (x *GetPublicationsRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *GetPublicationsRequest) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *GetPublicationsRequest) GetUser() *UserIdentifier {
	if x != nil {
		return x.User
	}
	return nil
}

type GetNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Next     bool                   `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
	Type     NotificationStreamType `protobuf:"varint,3,opt,name=type,proto3,enum=omilos_grpc.NotificationStreamType" json:"type,omitempty"`
}

func (x *GetNotificationsRequest) Reset() {
	*x = GetNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsRequest) ProtoMessage() {}

func (x *GetNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{18}
}

func (x *GetNotificationsRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *GetNotificationsRequest) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *GetNotificationsRequest) GetType() NotificationStreamType {
	if x != nil {
		return x.Type
	}
	return NotificationStreamType_UNSPECIFIED_NOTIFICATION_STREAM_TYPE
}

type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Fid       uint64 `protobuf:"varint,2,opt,name=fid,proto3" json:"fid,omitempty"`
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{19}
}

func (x *ConnectRequest) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ConnectRequest) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *ConnectRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExpiresAt *timestamppb.Timestamp  `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	PublicKey *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Metadata  *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	User      *User                   `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{20}
}

func (x *ConnectResponse) GetToken() *wrapperspb.StringValue {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ConnectResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *ConnectResponse) GetPublicKey() *wrapperspb.StringValue {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *ConnectResponse) GetMetadata() *wrapperspb.StringValue {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ConnectResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type PostCastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text     string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	ParentId *wrapperspb.Int64Value `protobuf:"bytes,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
}

func (x *PostCastRequest) Reset() {
	*x = PostCastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCastRequest) ProtoMessage() {}

func (x *PostCastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCastRequest.ProtoReflect.Descriptor instead.
func (*PostCastRequest) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{21}
}

func (x *PostCastRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PostCastRequest) GetParentId() *wrapperspb.Int64Value {
	if x != nil {
		return x.ParentId
	}
	return nil
}

type UserCastContextUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cast       *CastIdentifier       `protobuf:"bytes,1,opt,name=cast,proto3" json:"cast,omitempty"`
	Viewed     *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=viewed,proto3" json:"viewed,omitempty"`
	Watched    *wrapperspb.BoolValue `protobuf:"bytes,3,opt,name=watched,proto3" json:"watched,omitempty"`
	Bookmarked *wrapperspb.BoolValue `protobuf:"bytes,4,opt,name=bookmarked,proto3" json:"bookmarked,omitempty"`
}

func (x *UserCastContextUpdate) Reset() {
	*x = UserCastContextUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCastContextUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCastContextUpdate) ProtoMessage() {}

func (x *UserCastContextUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCastContextUpdate.ProtoReflect.Descriptor instead.
func (*UserCastContextUpdate) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{22}
}

func (x *UserCastContextUpdate) GetCast() *CastIdentifier {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *UserCastContextUpdate) GetViewed() *wrapperspb.BoolValue {
	if x != nil {
		return x.Viewed
	}
	return nil
}

func (x *UserCastContextUpdate) GetWatched() *wrapperspb.BoolValue {
	if x != nil {
		return x.Watched
	}
	return nil
}

func (x *UserCastContextUpdate) GetBookmarked() *wrapperspb.BoolValue {
	if x != nil {
		return x.Bookmarked
	}
	return nil
}

type LikeCastResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LikeCastResponse) Reset() {
	*x = LikeCastResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeCastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCastResponse) ProtoMessage() {}

func (x *LikeCastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCastResponse.ProtoReflect.Descriptor instead.
func (*LikeCastResponse) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{23}
}

type SearchCastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SearchCastRequest) Reset() {
	*x = SearchCastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omilos_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCastRequest) ProtoMessage() {}

func (x *SearchCastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omilos_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCastRequest.ProtoReflect.Descriptor instead.
func (*SearchCastRequest) Descriptor() ([]byte, []int) {
	return file_omilos_proto_rawDescGZIP(), []int{24}
}

func (x *SearchCastRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

var File_omilos_proto protoreflect.FileDescriptor

var file_omilos_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x01, 0x0a,
	0x0e, 0x43, 0x61, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x3a,
	0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x66, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x46, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x0d, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xd4, 0x02, 0x0a,
	0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6f, 0x6d,
	0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x63, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x15, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x13, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x66, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x46, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x64, 0x22, 0x79, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x03, 0x66, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4c,
	0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c,
	0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe7, 0x01, 0x0a,
	0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x63, 0x65, 0x72, 0x70, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2b,
	0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x22, 0x30, 0x0a, 0x05, 0x43, 0x61, 0x73, 0x74, 0x73, 0x12,
	0x27, 0x0a, 0x05, 0x63, 0x61, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x73,
	0x74, 0x52, 0x05, 0x63, 0x61, 0x73, 0x74, 0x73, 0x22, 0x9d, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x66, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6d,
	0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6d, 0x69, 0x6c,
	0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1b, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x62, 0x69, 0x6f, 0x22, 0x81, 0x06, 0x0a, 0x04, 0x43, 0x61, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f,
	0x6f, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x0f,
	0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x55, 0x72, 0x6c, 0x12, 0x41, 0x0a, 0x0e, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x6f, 0x6f, 0x74, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f,
	0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x59, 0x0a, 0x1a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x17, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x47, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x5f, 0x66, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x46, 0x69, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x69, 0x65, 0x77, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x76, 0x69, 0x65,
	0x77, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x22, 0xef, 0x01, 0x0a, 0x06,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3e, 0x0a,
	0x0e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x0e, 0x0a,
	0x0c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0e, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x89, 0x02,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65,
	0x78, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x61, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x04,
	0x63, 0x61, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x7a, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x66,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x12, 0x2f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x83, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x37,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6f,
	0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5e, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x25, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x5f, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xee, 0x01, 0x0a, 0x15, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x61, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x04,
	0x63, 0x61, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x06, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x12, 0x3a,
	0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a,
	0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69,
	0x6b, 0x65, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29,
	0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2a, 0x43, 0x0a, 0x0c, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4b, 0x45,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x43, 0x41, 0x53, 0x54, 0x10, 0x02, 0x2a, 0x66,
	0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x4d, 0x45,
	0x4e, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x53, 0x54, 0x5f,
	0x4c, 0x49, 0x4b, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x52,
	0x45, 0x50, 0x4c, 0x59, 0x10, 0x03, 0x2a, 0xdd, 0x01, 0x0a, 0x0e, 0x43, 0x61, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x53, 0x54,
	0x52, 0x45, 0x41, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x48, 0x49, 0x4c, 0x44, 0x52, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x48, 0x52,
	0x45, 0x41, 0x44, 0x5f, 0x43, 0x41, 0x53, 0x54, 0x53, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x53, 0x10, 0x03, 0x12, 0x0e, 0x0a,
	0x0a, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x4b, 0x45, 0x53, 0x10, 0x04, 0x12, 0x10, 0x0a,
	0x0c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x45, 0x53, 0x10, 0x05, 0x12,
	0x0a, 0x0a, 0x06, 0x4c, 0x41, 0x54, 0x45, 0x53, 0x54, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x54,
	0x52, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x49, 0x47,
	0x48, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x53, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x43,
	0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4f,
	0x4f, 0x4b, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45,
	0x41, 0x52, 0x43, 0x48, 0x10, 0x0b, 0x2a, 0x5e, 0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x28, 0x0a, 0x24, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x52,
	0x45, 0x41, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c,
	0x4c, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x53, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x53, 0x10, 0x02, 0x32, 0x97, 0x06, 0x0a, 0x06, 0x4f, 0x6d, 0x69, 0x6c, 0x6f,
	0x73, 0x12, 0x46, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x6f,
	0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6f, 0x6d, 0x69, 0x6c,
	0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08, 0x50, 0x6f, 0x73,
	0x74, 0x43, 0x61, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x08, 0x4c, 0x69, 0x6b, 0x65,
	0x43, 0x61, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x1a, 0x19, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x0a, 0x52, 0x65, 0x63, 0x61, 0x73, 0x74, 0x43, 0x61, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x6f,
	0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x19, 0x2e, 0x6f, 0x6d, 0x69, 0x6c,
	0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x22, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x1a, 0x19, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x37, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x12, 0x19, 0x2e, 0x6f, 0x6d, 0x69, 0x6c,
	0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e,
	0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x6f,
	0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6f, 0x6d, 0x69, 0x6c,
	0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x3b,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x6f, 0x6d, 0x69, 0x6c,
	0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x11, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x73, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x73, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23,
	0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x00,
	0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f,
	0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x2f, 0x6f, 0x6d, 0x69, 0x6c, 0x6f, 0x73, 0x2d, 0x67, 0x72, 0x70,
	0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_omilos_proto_rawDescOnce sync.Once
	file_omilos_proto_rawDescData = file_omilos_proto_rawDesc
)

func file_omilos_proto_rawDescGZIP() []byte {
	file_omilos_proto_rawDescOnce.Do(func() {
		file_omilos_proto_rawDescData = protoimpl.X.CompressGZIP(file_omilos_proto_rawDescData)
	})
	return file_omilos_proto_rawDescData
}

var file_omilos_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_omilos_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_omilos_proto_goTypes = []interface{}{
	(ReactionType)(0),               // 0: omilos_grpc.ReactionType
	(NotificationType)(0),           // 1: omilos_grpc.NotificationType
	(CastStreamType)(0),             // 2: omilos_grpc.CastStreamType
	(NotificationStreamType)(0),     // 3: omilos_grpc.NotificationStreamType
	(*CastIdentifier)(nil),          // 4: omilos_grpc.CastIdentifier
	(*Notifications)(nil),           // 5: omilos_grpc.Notifications
	(*Notification)(nil),            // 6: omilos_grpc.Notification
	(*UserIdentifier)(nil),          // 7: omilos_grpc.UserIdentifier
	(*Publications)(nil),            // 8: omilos_grpc.Publications
	(*Publication)(nil),             // 9: omilos_grpc.Publication
	(*Casts)(nil),                   // 10: omilos_grpc.Casts
	(*User)(nil),                    // 11: omilos_grpc.User
	(*Profile)(nil),                 // 12: omilos_grpc.Profile
	(*Cast)(nil),                    // 13: omilos_grpc.Cast
	(*ViewerContext)(nil),           // 14: omilos_grpc.ViewerContext
	(*Author)(nil),                  // 15: omilos_grpc.Author
	(*ProfilePicture)(nil),          // 16: omilos_grpc.ProfilePicture
	(*BaseResponse)(nil),            // 17: omilos_grpc.BaseResponse
	(*GetMeRequest)(nil),            // 18: omilos_grpc.GetMeRequest
	(*GetCastsRequest)(nil),         // 19: omilos_grpc.GetCastsRequest
	(*GetUserRequest)(nil),          // 20: omilos_grpc.GetUserRequest
	(*GetPublicationsRequest)(nil),  // 21: omilos_grpc.GetPublicationsRequest
	(*GetNotificationsRequest)(nil), // 22: omilos_grpc.GetNotificationsRequest
	(*ConnectRequest)(nil),          // 23: omilos_grpc.ConnectRequest
	(*ConnectResponse)(nil),         // 24: omilos_grpc.ConnectResponse
	(*PostCastRequest)(nil),         // 25: omilos_grpc.PostCastRequest
	(*UserCastContextUpdate)(nil),   // 26: omilos_grpc.UserCastContextUpdate
	(*LikeCastResponse)(nil),        // 27: omilos_grpc.LikeCastResponse
	(*SearchCastRequest)(nil),       // 28: omilos_grpc.SearchCastRequest
	(*wrapperspb.Int64Value)(nil),   // 29: google.protobuf.Int64Value
	(*wrapperspb.StringValue)(nil),  // 30: google.protobuf.StringValue
	(*timestamppb.Timestamp)(nil),   // 31: google.protobuf.Timestamp
	(*wrapperspb.UInt32Value)(nil),  // 32: google.protobuf.UInt32Value
	(*wrapperspb.BoolValue)(nil),    // 33: google.protobuf.BoolValue
}
var file_omilos_proto_depIdxs = []int32{
	29, // 0: omilos_grpc.CastIdentifier.id:type_name -> google.protobuf.Int64Value
	30, // 1: omilos_grpc.CastIdentifier.hash:type_name -> google.protobuf.StringValue
	29, // 2: omilos_grpc.CastIdentifier.author_fid:type_name -> google.protobuf.Int64Value
	6,  // 3: omilos_grpc.Notifications.notifications:type_name -> omilos_grpc.Notification
	1,  // 4: omilos_grpc.Notification.type:type_name -> omilos_grpc.NotificationType
	16, // 5: omilos_grpc.Notification.actor_profile_picture:type_name -> omilos_grpc.ProfilePicture
	31, // 6: omilos_grpc.Notification.timestamp:type_name -> google.protobuf.Timestamp
	29, // 7: omilos_grpc.UserIdentifier.fid:type_name -> google.protobuf.Int64Value
	30, // 8: omilos_grpc.UserIdentifier.username:type_name -> google.protobuf.StringValue
	9,  // 9: omilos_grpc.Publications.publications:type_name -> omilos_grpc.Publication
	15, // 10: omilos_grpc.Publication.author:type_name -> omilos_grpc.Author
	31, // 11: omilos_grpc.Publication.published_at:type_name -> google.protobuf.Timestamp
	13, // 12: omilos_grpc.Casts.casts:type_name -> omilos_grpc.Cast
	16, // 13: omilos_grpc.User.profile_picture:type_name -> omilos_grpc.ProfilePicture
	12, // 14: omilos_grpc.User.profile:type_name -> omilos_grpc.Profile
	29, // 15: omilos_grpc.Cast.root_parent_id:type_name -> google.protobuf.Int64Value
	29, // 16: omilos_grpc.Cast.parent_id:type_name -> google.protobuf.Int64Value
	31, // 17: omilos_grpc.Cast.published_at:type_name -> google.protobuf.Timestamp
	14, // 18: omilos_grpc.Cast.viewer_context:type_name -> omilos_grpc.ViewerContext
	15, // 19: omilos_grpc.Cast.author:type_name -> omilos_grpc.Author
	30, // 20: omilos_grpc.Cast.parent_author_display_name:type_name -> google.protobuf.StringValue
	29, // 21: omilos_grpc.Cast.parent_author_fid:type_name -> google.protobuf.Int64Value
	16, // 22: omilos_grpc.Author.profile_picture:type_name -> omilos_grpc.ProfilePicture
	7,  // 23: omilos_grpc.GetCastsRequest.user:type_name -> omilos_grpc.UserIdentifier
	4,  // 24: omilos_grpc.GetCastsRequest.cast:type_name -> omilos_grpc.CastIdentifier
	30, // 25: omilos_grpc.GetCastsRequest.query:type_name -> google.protobuf.StringValue
	2,  // 26: omilos_grpc.GetCastsRequest.type:type_name -> omilos_grpc.CastStreamType
	32, // 27: omilos_grpc.GetUserRequest.fid:type_name -> google.protobuf.UInt32Value
	30, // 28: omilos_grpc.GetUserRequest.username:type_name -> google.protobuf.StringValue
	7,  // 29: omilos_grpc.GetPublicationsRequest.user:type_name -> omilos_grpc.UserIdentifier
	3,  // 30: omilos_grpc.GetNotificationsRequest.type:type_name -> omilos_grpc.NotificationStreamType
	30, // 31: omilos_grpc.ConnectResponse.token:type_name -> google.protobuf.StringValue
	31, // 32: omilos_grpc.ConnectResponse.expires_at:type_name -> google.protobuf.Timestamp
	30, // 33: omilos_grpc.ConnectResponse.public_key:type_name -> google.protobuf.StringValue
	30, // 34: omilos_grpc.ConnectResponse.metadata:type_name -> google.protobuf.StringValue
	11, // 35: omilos_grpc.ConnectResponse.user:type_name -> omilos_grpc.User
	29, // 36: omilos_grpc.PostCastRequest.parent_id:type_name -> google.protobuf.Int64Value
	4,  // 37: omilos_grpc.UserCastContextUpdate.cast:type_name -> omilos_grpc.CastIdentifier
	33, // 38: omilos_grpc.UserCastContextUpdate.viewed:type_name -> google.protobuf.BoolValue
	33, // 39: omilos_grpc.UserCastContextUpdate.watched:type_name -> google.protobuf.BoolValue
	33, // 40: omilos_grpc.UserCastContextUpdate.bookmarked:type_name -> google.protobuf.BoolValue
	23, // 41: omilos_grpc.Omilos.Connect:input_type -> omilos_grpc.ConnectRequest
	25, // 42: omilos_grpc.Omilos.PostCast:input_type -> omilos_grpc.PostCastRequest
	4,  // 43: omilos_grpc.Omilos.LikeCast:input_type -> omilos_grpc.CastIdentifier
	4,  // 44: omilos_grpc.Omilos.RecastCast:input_type -> omilos_grpc.CastIdentifier
	26, // 45: omilos_grpc.Omilos.UpdateUserCastContext:input_type -> omilos_grpc.UserCastContextUpdate
	18, // 46: omilos_grpc.Omilos.GetMe:input_type -> omilos_grpc.GetMeRequest
	22, // 47: omilos_grpc.Omilos.GetNotifications:input_type -> omilos_grpc.GetNotificationsRequest
	20, // 48: omilos_grpc.Omilos.GetUser:input_type -> omilos_grpc.GetUserRequest
	4,  // 49: omilos_grpc.Omilos.GetCast:input_type -> omilos_grpc.CastIdentifier
	19, // 50: omilos_grpc.Omilos.GetCasts:input_type -> omilos_grpc.GetCastsRequest
	21, // 51: omilos_grpc.Omilos.GetPublications:input_type -> omilos_grpc.GetPublicationsRequest
	24, // 52: omilos_grpc.Omilos.Connect:output_type -> omilos_grpc.ConnectResponse
	13, // 53: omilos_grpc.Omilos.PostCast:output_type -> omilos_grpc.Cast
	17, // 54: omilos_grpc.Omilos.LikeCast:output_type -> omilos_grpc.BaseResponse
	17, // 55: omilos_grpc.Omilos.RecastCast:output_type -> omilos_grpc.BaseResponse
	17, // 56: omilos_grpc.Omilos.UpdateUserCastContext:output_type -> omilos_grpc.BaseResponse
	11, // 57: omilos_grpc.Omilos.GetMe:output_type -> omilos_grpc.User
	5,  // 58: omilos_grpc.Omilos.GetNotifications:output_type -> omilos_grpc.Notifications
	11, // 59: omilos_grpc.Omilos.GetUser:output_type -> omilos_grpc.User
	13, // 60: omilos_grpc.Omilos.GetCast:output_type -> omilos_grpc.Cast
	10, // 61: omilos_grpc.Omilos.GetCasts:output_type -> omilos_grpc.Casts
	8,  // 62: omilos_grpc.Omilos.GetPublications:output_type -> omilos_grpc.Publications
	52, // [52:63] is the sub-list for method output_type
	41, // [41:52] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_omilos_proto_init() }
func file_omilos_proto_init() {
	if File_omilos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_omilos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CastIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notifications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Publications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Publication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Casts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewerContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Author); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfilePicture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCastsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCastContextUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeCastResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omilos_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_omilos_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_omilos_proto_goTypes,
		DependencyIndexes: file_omilos_proto_depIdxs,
		EnumInfos:         file_omilos_proto_enumTypes,
		MessageInfos:      file_omilos_proto_msgTypes,
	}.Build()
	File_omilos_proto = out.File
	file_omilos_proto_rawDesc = nil
	file_omilos_proto_goTypes = nil
	file_omilos_proto_depIdxs = nil
}
