// @generated by protobuf-ts 2.8.2 with parameter long_type_number
// @generated from protobuf file "omilos.proto" (package "omilos_grpc", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { UInt32Value } from "./google/protobuf/wrappers";
import { StringValue } from "./google/protobuf/wrappers";
import { UInt64Value } from "./google/protobuf/wrappers";
import { Timestamp } from "./google/protobuf/timestamp";
/**
 * @generated from protobuf message omilos_grpc.GetMeRequest
 */
export interface GetMeRequest {
}
/**
 * @generated from protobuf message omilos_grpc.LoginRequest
 */
export interface LoginRequest {
    /**
     * @generated from protobuf field: uint64 timestamp = 1;
     */
    timestamp: number;
    /**
     * @generated from protobuf field: bytes signature = 2;
     */
    signature: Uint8Array;
}
/**
 * @generated from protobuf message omilos_grpc.LoginResponse
 */
export interface LoginResponse {
    /**
     * @generated from protobuf field: string token = 1;
     */
    token: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp expires_at = 2;
     */
    expiresAt?: Timestamp;
    /**
     * @generated from protobuf field: omilos_grpc.User me = 3;
     */
    me?: User;
}
/**
 * @generated from protobuf message omilos_grpc.PostCastRequest
 */
export interface PostCastRequest {
    /**
     * @generated from protobuf field: string text = 1;
     */
    text: string;
    /**
     * @generated from protobuf field: google.protobuf.UInt64Value parent_id = 2;
     */
    parentId?: UInt64Value;
}
/**
 * @generated from protobuf message omilos_grpc.LikeCastRequest
 */
export interface LikeCastRequest {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: number;
}
/**
 * @generated from protobuf message omilos_grpc.LikeCastResponse
 */
export interface LikeCastResponse {
}
/**
 * @generated from protobuf message omilos_grpc.CastIdentifier
 */
export interface CastIdentifier {
    /**
     * @generated from protobuf field: google.protobuf.UInt64Value id = 1;
     */
    id?: UInt64Value;
    /**
     * @generated from protobuf field: google.protobuf.StringValue hash = 2;
     */
    hash?: StringValue;
}
/**
 * @generated from protobuf message omilos_grpc.GetCastRequest
 */
export interface GetCastRequest {
    /**
     * @generated from protobuf field: omilos_grpc.CastIdentifier cast = 1;
     */
    cast?: CastIdentifier;
}
/**
 * @generated from protobuf message omilos_grpc.GetNotificationsRequest
 */
export interface GetNotificationsRequest {
    /**
     * @generated from protobuf field: string stream_id = 1;
     */
    streamId: string;
    /**
     * @generated from protobuf field: bool next = 2;
     */
    next: boolean;
}
/**
 * @generated from protobuf message omilos_grpc.Notifications
 */
export interface Notifications {
    /**
     * @generated from protobuf field: repeated omilos_grpc.Notification notifications = 1;
     */
    notifications: Notification[];
}
/**
 * @generated from protobuf message omilos_grpc.Notification
 */
export interface Notification {
    /**
     * @generated from protobuf field: omilos_grpc.NotificationType type = 1;
     */
    type: NotificationType;
    /**
     * @generated from protobuf field: uint64 cast_id = 2;
     */
    castId: number;
    /**
     * @generated from protobuf field: string actor_display_name = 3;
     */
    actorDisplayName: string;
    /**
     * @generated from protobuf field: omilos_grpc.ProfilePicture actor_profile_picture = 4;
     */
    actorProfilePicture?: ProfilePicture;
    /**
     * @generated from protobuf field: uint32 actor_fid = 5;
     */
    actorFid: number;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp timestamp = 6;
     */
    timestamp?: Timestamp;
}
/**
 * @generated from protobuf message omilos_grpc.UserIdentifier
 */
export interface UserIdentifier {
    /**
     * @generated from protobuf field: google.protobuf.UInt32Value fid = 1;
     */
    fid?: UInt32Value;
    /**
     * @generated from protobuf field: google.protobuf.StringValue username = 2;
     */
    username?: StringValue;
}
/**
 * @generated from protobuf message omilos_grpc.GetCastsRequest
 */
export interface GetCastsRequest {
    /**
     * @generated from protobuf field: string stream_id = 1;
     */
    streamId: string;
    /**
     * @generated from protobuf field: bool next = 2;
     */
    next: boolean;
    /**
     * @generated from protobuf field: omilos_grpc.UserIdentifier user = 3;
     */
    user?: UserIdentifier;
    /**
     * @generated from protobuf field: omilos_grpc.CastIdentifier cast = 4;
     */
    cast?: CastIdentifier;
    /**
     * @generated from protobuf field: omilos_grpc.CastStreamType type = 5;
     */
    type: CastStreamType;
}
/**
 * @generated from protobuf message omilos_grpc.GetUserRequest
 */
export interface GetUserRequest {
    /**
     * @generated from protobuf field: google.protobuf.UInt32Value fid = 1;
     */
    fid?: UInt32Value;
    /**
     * @generated from protobuf field: google.protobuf.StringValue username = 2;
     */
    username?: StringValue;
}
/**
 * @generated from protobuf message omilos_grpc.Casts
 */
export interface Casts {
    /**
     * @generated from protobuf field: repeated omilos_grpc.Cast casts = 1;
     */
    casts: Cast[];
}
/**
 * @generated from protobuf message omilos_grpc.User
 */
export interface User {
    /**
     * @generated from protobuf field: uint32 fid = 1;
     */
    fid: number;
    /**
     * @generated from protobuf field: string username = 2;
     */
    username: string;
    /**
     * @generated from protobuf field: string display_name = 3;
     */
    displayName: string;
    /**
     * @generated from protobuf field: omilos_grpc.ProfilePicture profile_picture = 4;
     */
    profilePicture?: ProfilePicture;
    /**
     * @generated from protobuf field: omilos_grpc.Profile profile = 5;
     */
    profile?: Profile;
    /**
     * @generated from protobuf field: uint32 follower_count = 6;
     */
    followerCount: number;
    /**
     * @generated from protobuf field: uint32 following_count = 7;
     */
    followingCount: number;
}
/**
 * @generated from protobuf message omilos_grpc.Profile
 */
export interface Profile {
    /**
     * @generated from protobuf field: string bio = 1;
     */
    bio: string;
}
/**
 * @generated from protobuf message omilos_grpc.Cast
 */
export interface Cast {
    /**
     * @generated from protobuf field: uint64 id = 1;
     */
    id: number;
    /**
     * @generated from protobuf field: string hash = 2;
     */
    hash: string;
    /**
     * @generated from protobuf field: string thread_hash = 3;
     */
    threadHash: string;
    /**
     * @generated from protobuf field: google.protobuf.UInt64Value parent_id = 4;
     */
    parentId?: UInt64Value;
    /**
     * @generated from protobuf field: omilos_grpc.Author author = 5;
     */
    author?: Author;
    /**
     * @generated from protobuf field: string text = 6;
     */
    text: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp published_at = 7;
     */
    publishedAt?: Timestamp;
    /**
     * @generated from protobuf field: uint64 replies = 8;
     */
    replies: number;
    /**
     * @generated from protobuf field: uint64 reactions = 9;
     */
    reactions: number;
    /**
     * @generated from protobuf field: uint64 recasts = 10;
     */
    recasts: number; // TODO
    /**
     * @generated from protobuf field: uint64 watches = 11;
     */
    watches: number;
    /**
     * @generated from protobuf field: bool recast = 12;
     */
    recast: boolean;
    /**
     * @generated from protobuf field: omilos_grpc.ViewerContext viewer_context = 13;
     */
    viewerContext?: ViewerContext;
    /**
     * @generated from protobuf field: google.protobuf.StringValue parent_author_display_name = 14;
     */
    parentAuthorDisplayName?: StringValue;
    /**
     * @generated from protobuf field: google.protobuf.UInt64Value parent_author_fid = 15;
     */
    parentAuthorFid?: UInt64Value;
}
/**
 * @generated from protobuf message omilos_grpc.ViewerContext
 */
export interface ViewerContext {
    /**
     * @generated from protobuf field: bool reacted = 1;
     */
    reacted: boolean;
    /**
     * @generated from protobuf field: bool recast = 2;
     */
    recast: boolean;
    /**
     * @generated from protobuf field: bool watched = 3;
     */
    watched: boolean;
}
/**
 * @generated from protobuf message omilos_grpc.Author
 */
export interface Author {
    /**
     * @generated from protobuf field: uint64 fid = 1;
     */
    fid: number;
    /**
     * @generated from protobuf field: string username = 2;
     */
    username: string;
    /**
     * @generated from protobuf field: string display_name = 3;
     */
    displayName: string;
    /**
     * @generated from protobuf field: omilos_grpc.ProfilePicture profile_picture = 4;
     */
    profilePicture?: ProfilePicture;
    /**
     * @generated from protobuf field: uint64 follower_count = 5;
     */
    followerCount: number;
    /**
     * @generated from protobuf field: uint64 following_count = 6;
     */
    followingCount: number;
}
/**
 * @generated from protobuf message omilos_grpc.ProfilePicture
 */
export interface ProfilePicture {
    /**
     * @generated from protobuf field: string url = 1;
     */
    url: string;
    /**
     * @generated from protobuf field: bool verified = 2;
     */
    verified: boolean;
}
/**
 * @generated from protobuf enum omilos_grpc.ReactionType
 */
export enum ReactionType {
    /**
     * @generated from protobuf enum value: UNSPECIFIED_REACTION_TYPE = 0;
     */
    UNSPECIFIED_REACTION_TYPE = 0,
    /**
     * @generated from protobuf enum value: LIKE = 1;
     */
    LIKE = 1
}
/**
 * @generated from protobuf enum omilos_grpc.NotificationType
 */
export enum NotificationType {
    /**
     * @generated from protobuf enum value: UNSPECIFIED_NOTIFICATION_TYPE = 0;
     */
    UNSPECIFIED_NOTIFICATION_TYPE = 0,
    /**
     * @generated from protobuf enum value: CAST_MENTION = 1;
     */
    CAST_MENTION = 1,
    /**
     * @generated from protobuf enum value: CAST_LIKE = 2;
     */
    CAST_LIKE = 2,
    /**
     * @generated from protobuf enum value: CAST_REPLY = 3;
     */
    CAST_REPLY = 3
}
/**
 * @generated from protobuf enum omilos_grpc.CastStreamType
 */
export enum CastStreamType {
    /**
     * @generated from protobuf enum value: UNSPECIFIED_CAST_STREAM_TYPE = 0;
     */
    UNSPECIFIED_CAST_STREAM_TYPE = 0,
    /**
     * @generated from protobuf enum value: CHILDREN = 1;
     */
    CHILDREN = 1,
    /**
     * @generated from protobuf enum value: THREAD_CASTS = 2;
     */
    THREAD_CASTS = 2,
    /**
     * @generated from protobuf enum value: USER_THREADS = 3;
     */
    USER_THREADS = 3,
    /**
     * @generated from protobuf enum value: USER_LIKES = 4;
     */
    USER_LIKES = 4,
    /**
     * @generated from protobuf enum value: USER_REPLIES = 5;
     */
    USER_REPLIES = 5,
    /**
     * @generated from protobuf enum value: TIMELINE = 6;
     */
    TIMELINE = 6,
    /**
     * @generated from protobuf enum value: TRENDING = 7;
     */
    TRENDING = 7
}
// @generated message type with reflection information, may provide speed optimized methods
class GetMeRequest$Type extends MessageType<GetMeRequest> {
    constructor() {
        super("omilos_grpc.GetMeRequest", []);
    }
    create(value?: PartialMessage<GetMeRequest>): GetMeRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetMeRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetMeRequest): GetMeRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetMeRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.GetMeRequest
 */
export const GetMeRequest = new GetMeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoginRequest$Type extends MessageType<LoginRequest> {
    constructor() {
        super("omilos_grpc.LoginRequest", [
            { no: 1, name: "timestamp", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "signature", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value?: PartialMessage<LoginRequest>): LoginRequest {
        const message = { timestamp: 0, signature: new Uint8Array(0) };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LoginRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoginRequest): LoginRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 timestamp */ 1:
                    message.timestamp = reader.uint64().toNumber();
                    break;
                case /* bytes signature */ 2:
                    message.signature = reader.bytes();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoginRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 timestamp = 1; */
        if (message.timestamp !== 0)
            writer.tag(1, WireType.Varint).uint64(message.timestamp);
        /* bytes signature = 2; */
        if (message.signature.length)
            writer.tag(2, WireType.LengthDelimited).bytes(message.signature);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.LoginRequest
 */
export const LoginRequest = new LoginRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoginResponse$Type extends MessageType<LoginResponse> {
    constructor() {
        super("omilos_grpc.LoginResponse", [
            { no: 1, name: "token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "expires_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "me", kind: "message", T: () => User }
        ]);
    }
    create(value?: PartialMessage<LoginResponse>): LoginResponse {
        const message = { token: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LoginResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LoginResponse): LoginResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string token */ 1:
                    message.token = reader.string();
                    break;
                case /* google.protobuf.Timestamp expires_at */ 2:
                    message.expiresAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.expiresAt);
                    break;
                case /* omilos_grpc.User me */ 3:
                    message.me = User.internalBinaryRead(reader, reader.uint32(), options, message.me);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LoginResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string token = 1; */
        if (message.token !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.token);
        /* google.protobuf.Timestamp expires_at = 2; */
        if (message.expiresAt)
            Timestamp.internalBinaryWrite(message.expiresAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* omilos_grpc.User me = 3; */
        if (message.me)
            User.internalBinaryWrite(message.me, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.LoginResponse
 */
export const LoginResponse = new LoginResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PostCastRequest$Type extends MessageType<PostCastRequest> {
    constructor() {
        super("omilos_grpc.PostCastRequest", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "parent_id", kind: "message", T: () => UInt64Value }
        ]);
    }
    create(value?: PartialMessage<PostCastRequest>): PostCastRequest {
        const message = { text: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PostCastRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PostCastRequest): PostCastRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* google.protobuf.UInt64Value parent_id */ 2:
                    message.parentId = UInt64Value.internalBinaryRead(reader, reader.uint32(), options, message.parentId);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PostCastRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* google.protobuf.UInt64Value parent_id = 2; */
        if (message.parentId)
            UInt64Value.internalBinaryWrite(message.parentId, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.PostCastRequest
 */
export const PostCastRequest = new PostCastRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LikeCastRequest$Type extends MessageType<LikeCastRequest> {
    constructor() {
        super("omilos_grpc.LikeCastRequest", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<LikeCastRequest>): LikeCastRequest {
        const message = { id: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LikeCastRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LikeCastRequest): LikeCastRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 id */ 1:
                    message.id = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LikeCastRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).uint64(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.LikeCastRequest
 */
export const LikeCastRequest = new LikeCastRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LikeCastResponse$Type extends MessageType<LikeCastResponse> {
    constructor() {
        super("omilos_grpc.LikeCastResponse", []);
    }
    create(value?: PartialMessage<LikeCastResponse>): LikeCastResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LikeCastResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LikeCastResponse): LikeCastResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LikeCastResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.LikeCastResponse
 */
export const LikeCastResponse = new LikeCastResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CastIdentifier$Type extends MessageType<CastIdentifier> {
    constructor() {
        super("omilos_grpc.CastIdentifier", [
            { no: 1, name: "id", kind: "message", T: () => UInt64Value },
            { no: 2, name: "hash", kind: "message", T: () => StringValue }
        ]);
    }
    create(value?: PartialMessage<CastIdentifier>): CastIdentifier {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CastIdentifier>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CastIdentifier): CastIdentifier {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.UInt64Value id */ 1:
                    message.id = UInt64Value.internalBinaryRead(reader, reader.uint32(), options, message.id);
                    break;
                case /* google.protobuf.StringValue hash */ 2:
                    message.hash = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.hash);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CastIdentifier, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.UInt64Value id = 1; */
        if (message.id)
            UInt64Value.internalBinaryWrite(message.id, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.StringValue hash = 2; */
        if (message.hash)
            StringValue.internalBinaryWrite(message.hash, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.CastIdentifier
 */
export const CastIdentifier = new CastIdentifier$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetCastRequest$Type extends MessageType<GetCastRequest> {
    constructor() {
        super("omilos_grpc.GetCastRequest", [
            { no: 1, name: "cast", kind: "message", T: () => CastIdentifier }
        ]);
    }
    create(value?: PartialMessage<GetCastRequest>): GetCastRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetCastRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetCastRequest): GetCastRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* omilos_grpc.CastIdentifier cast */ 1:
                    message.cast = CastIdentifier.internalBinaryRead(reader, reader.uint32(), options, message.cast);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetCastRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* omilos_grpc.CastIdentifier cast = 1; */
        if (message.cast)
            CastIdentifier.internalBinaryWrite(message.cast, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.GetCastRequest
 */
export const GetCastRequest = new GetCastRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetNotificationsRequest$Type extends MessageType<GetNotificationsRequest> {
    constructor() {
        super("omilos_grpc.GetNotificationsRequest", [
            { no: 1, name: "stream_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "next", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<GetNotificationsRequest>): GetNotificationsRequest {
        const message = { streamId: "", next: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetNotificationsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetNotificationsRequest): GetNotificationsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string stream_id */ 1:
                    message.streamId = reader.string();
                    break;
                case /* bool next */ 2:
                    message.next = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetNotificationsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string stream_id = 1; */
        if (message.streamId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.streamId);
        /* bool next = 2; */
        if (message.next !== false)
            writer.tag(2, WireType.Varint).bool(message.next);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.GetNotificationsRequest
 */
export const GetNotificationsRequest = new GetNotificationsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Notifications$Type extends MessageType<Notifications> {
    constructor() {
        super("omilos_grpc.Notifications", [
            { no: 1, name: "notifications", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Notification }
        ]);
    }
    create(value?: PartialMessage<Notifications>): Notifications {
        const message = { notifications: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Notifications>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Notifications): Notifications {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated omilos_grpc.Notification notifications */ 1:
                    message.notifications.push(Notification.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Notifications, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated omilos_grpc.Notification notifications = 1; */
        for (let i = 0; i < message.notifications.length; i++)
            Notification.internalBinaryWrite(message.notifications[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.Notifications
 */
export const Notifications = new Notifications$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Notification$Type extends MessageType<Notification> {
    constructor() {
        super("omilos_grpc.Notification", [
            { no: 1, name: "type", kind: "enum", T: () => ["omilos_grpc.NotificationType", NotificationType] },
            { no: 2, name: "cast_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "actor_display_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "actor_profile_picture", kind: "message", T: () => ProfilePicture },
            { no: 5, name: "actor_fid", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "timestamp", kind: "message", T: () => Timestamp }
        ]);
    }
    create(value?: PartialMessage<Notification>): Notification {
        const message = { type: 0, castId: 0, actorDisplayName: "", actorFid: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Notification>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Notification): Notification {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* omilos_grpc.NotificationType type */ 1:
                    message.type = reader.int32();
                    break;
                case /* uint64 cast_id */ 2:
                    message.castId = reader.uint64().toNumber();
                    break;
                case /* string actor_display_name */ 3:
                    message.actorDisplayName = reader.string();
                    break;
                case /* omilos_grpc.ProfilePicture actor_profile_picture */ 4:
                    message.actorProfilePicture = ProfilePicture.internalBinaryRead(reader, reader.uint32(), options, message.actorProfilePicture);
                    break;
                case /* uint32 actor_fid */ 5:
                    message.actorFid = reader.uint32();
                    break;
                case /* google.protobuf.Timestamp timestamp */ 6:
                    message.timestamp = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.timestamp);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Notification, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* omilos_grpc.NotificationType type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* uint64 cast_id = 2; */
        if (message.castId !== 0)
            writer.tag(2, WireType.Varint).uint64(message.castId);
        /* string actor_display_name = 3; */
        if (message.actorDisplayName !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.actorDisplayName);
        /* omilos_grpc.ProfilePicture actor_profile_picture = 4; */
        if (message.actorProfilePicture)
            ProfilePicture.internalBinaryWrite(message.actorProfilePicture, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* uint32 actor_fid = 5; */
        if (message.actorFid !== 0)
            writer.tag(5, WireType.Varint).uint32(message.actorFid);
        /* google.protobuf.Timestamp timestamp = 6; */
        if (message.timestamp)
            Timestamp.internalBinaryWrite(message.timestamp, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.Notification
 */
export const Notification = new Notification$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserIdentifier$Type extends MessageType<UserIdentifier> {
    constructor() {
        super("omilos_grpc.UserIdentifier", [
            { no: 1, name: "fid", kind: "message", T: () => UInt32Value },
            { no: 2, name: "username", kind: "message", T: () => StringValue }
        ]);
    }
    create(value?: PartialMessage<UserIdentifier>): UserIdentifier {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserIdentifier>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserIdentifier): UserIdentifier {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.UInt32Value fid */ 1:
                    message.fid = UInt32Value.internalBinaryRead(reader, reader.uint32(), options, message.fid);
                    break;
                case /* google.protobuf.StringValue username */ 2:
                    message.username = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.username);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserIdentifier, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.UInt32Value fid = 1; */
        if (message.fid)
            UInt32Value.internalBinaryWrite(message.fid, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.StringValue username = 2; */
        if (message.username)
            StringValue.internalBinaryWrite(message.username, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.UserIdentifier
 */
export const UserIdentifier = new UserIdentifier$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetCastsRequest$Type extends MessageType<GetCastsRequest> {
    constructor() {
        super("omilos_grpc.GetCastsRequest", [
            { no: 1, name: "stream_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "next", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "user", kind: "message", T: () => UserIdentifier },
            { no: 4, name: "cast", kind: "message", T: () => CastIdentifier },
            { no: 5, name: "type", kind: "enum", T: () => ["omilos_grpc.CastStreamType", CastStreamType] }
        ]);
    }
    create(value?: PartialMessage<GetCastsRequest>): GetCastsRequest {
        const message = { streamId: "", next: false, type: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetCastsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetCastsRequest): GetCastsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string stream_id */ 1:
                    message.streamId = reader.string();
                    break;
                case /* bool next */ 2:
                    message.next = reader.bool();
                    break;
                case /* omilos_grpc.UserIdentifier user */ 3:
                    message.user = UserIdentifier.internalBinaryRead(reader, reader.uint32(), options, message.user);
                    break;
                case /* omilos_grpc.CastIdentifier cast */ 4:
                    message.cast = CastIdentifier.internalBinaryRead(reader, reader.uint32(), options, message.cast);
                    break;
                case /* omilos_grpc.CastStreamType type */ 5:
                    message.type = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetCastsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string stream_id = 1; */
        if (message.streamId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.streamId);
        /* bool next = 2; */
        if (message.next !== false)
            writer.tag(2, WireType.Varint).bool(message.next);
        /* omilos_grpc.UserIdentifier user = 3; */
        if (message.user)
            UserIdentifier.internalBinaryWrite(message.user, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* omilos_grpc.CastIdentifier cast = 4; */
        if (message.cast)
            CastIdentifier.internalBinaryWrite(message.cast, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* omilos_grpc.CastStreamType type = 5; */
        if (message.type !== 0)
            writer.tag(5, WireType.Varint).int32(message.type);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.GetCastsRequest
 */
export const GetCastsRequest = new GetCastsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetUserRequest$Type extends MessageType<GetUserRequest> {
    constructor() {
        super("omilos_grpc.GetUserRequest", [
            { no: 1, name: "fid", kind: "message", T: () => UInt32Value },
            { no: 2, name: "username", kind: "message", T: () => StringValue }
        ]);
    }
    create(value?: PartialMessage<GetUserRequest>): GetUserRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetUserRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetUserRequest): GetUserRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.UInt32Value fid */ 1:
                    message.fid = UInt32Value.internalBinaryRead(reader, reader.uint32(), options, message.fid);
                    break;
                case /* google.protobuf.StringValue username */ 2:
                    message.username = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.username);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetUserRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.UInt32Value fid = 1; */
        if (message.fid)
            UInt32Value.internalBinaryWrite(message.fid, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.StringValue username = 2; */
        if (message.username)
            StringValue.internalBinaryWrite(message.username, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.GetUserRequest
 */
export const GetUserRequest = new GetUserRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Casts$Type extends MessageType<Casts> {
    constructor() {
        super("omilos_grpc.Casts", [
            { no: 1, name: "casts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Cast }
        ]);
    }
    create(value?: PartialMessage<Casts>): Casts {
        const message = { casts: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Casts>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Casts): Casts {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated omilos_grpc.Cast casts */ 1:
                    message.casts.push(Cast.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Casts, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated omilos_grpc.Cast casts = 1; */
        for (let i = 0; i < message.casts.length; i++)
            Cast.internalBinaryWrite(message.casts[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.Casts
 */
export const Casts = new Casts$Type();
// @generated message type with reflection information, may provide speed optimized methods
class User$Type extends MessageType<User> {
    constructor() {
        super("omilos_grpc.User", [
            { no: 1, name: "fid", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "username", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "display_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "profile_picture", kind: "message", T: () => ProfilePicture },
            { no: 5, name: "profile", kind: "message", T: () => Profile },
            { no: 6, name: "follower_count", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "following_count", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<User>): User {
        const message = { fid: 0, username: "", displayName: "", followerCount: 0, followingCount: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<User>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: User): User {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 fid */ 1:
                    message.fid = reader.uint32();
                    break;
                case /* string username */ 2:
                    message.username = reader.string();
                    break;
                case /* string display_name */ 3:
                    message.displayName = reader.string();
                    break;
                case /* omilos_grpc.ProfilePicture profile_picture */ 4:
                    message.profilePicture = ProfilePicture.internalBinaryRead(reader, reader.uint32(), options, message.profilePicture);
                    break;
                case /* omilos_grpc.Profile profile */ 5:
                    message.profile = Profile.internalBinaryRead(reader, reader.uint32(), options, message.profile);
                    break;
                case /* uint32 follower_count */ 6:
                    message.followerCount = reader.uint32();
                    break;
                case /* uint32 following_count */ 7:
                    message.followingCount = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: User, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 fid = 1; */
        if (message.fid !== 0)
            writer.tag(1, WireType.Varint).uint32(message.fid);
        /* string username = 2; */
        if (message.username !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.username);
        /* string display_name = 3; */
        if (message.displayName !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.displayName);
        /* omilos_grpc.ProfilePicture profile_picture = 4; */
        if (message.profilePicture)
            ProfilePicture.internalBinaryWrite(message.profilePicture, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* omilos_grpc.Profile profile = 5; */
        if (message.profile)
            Profile.internalBinaryWrite(message.profile, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* uint32 follower_count = 6; */
        if (message.followerCount !== 0)
            writer.tag(6, WireType.Varint).uint32(message.followerCount);
        /* uint32 following_count = 7; */
        if (message.followingCount !== 0)
            writer.tag(7, WireType.Varint).uint32(message.followingCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.User
 */
export const User = new User$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Profile$Type extends MessageType<Profile> {
    constructor() {
        super("omilos_grpc.Profile", [
            { no: 1, name: "bio", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Profile>): Profile {
        const message = { bio: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Profile>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Profile): Profile {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string bio */ 1:
                    message.bio = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Profile, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string bio = 1; */
        if (message.bio !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.bio);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.Profile
 */
export const Profile = new Profile$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Cast$Type extends MessageType<Cast> {
    constructor() {
        super("omilos_grpc.Cast", [
            { no: 1, name: "id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "hash", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "thread_hash", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "parent_id", kind: "message", T: () => UInt64Value },
            { no: 5, name: "author", kind: "message", T: () => Author },
            { no: 6, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "published_at", kind: "message", T: () => Timestamp },
            { no: 8, name: "replies", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 9, name: "reactions", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 10, name: "recasts", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 11, name: "watches", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 12, name: "recast", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "viewer_context", kind: "message", T: () => ViewerContext },
            { no: 14, name: "parent_author_display_name", kind: "message", T: () => StringValue },
            { no: 15, name: "parent_author_fid", kind: "message", T: () => UInt64Value }
        ]);
    }
    create(value?: PartialMessage<Cast>): Cast {
        const message = { id: 0, hash: "", threadHash: "", text: "", replies: 0, reactions: 0, recasts: 0, watches: 0, recast: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Cast>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Cast): Cast {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 id */ 1:
                    message.id = reader.uint64().toNumber();
                    break;
                case /* string hash */ 2:
                    message.hash = reader.string();
                    break;
                case /* string thread_hash */ 3:
                    message.threadHash = reader.string();
                    break;
                case /* google.protobuf.UInt64Value parent_id */ 4:
                    message.parentId = UInt64Value.internalBinaryRead(reader, reader.uint32(), options, message.parentId);
                    break;
                case /* omilos_grpc.Author author */ 5:
                    message.author = Author.internalBinaryRead(reader, reader.uint32(), options, message.author);
                    break;
                case /* string text */ 6:
                    message.text = reader.string();
                    break;
                case /* google.protobuf.Timestamp published_at */ 7:
                    message.publishedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.publishedAt);
                    break;
                case /* uint64 replies */ 8:
                    message.replies = reader.uint64().toNumber();
                    break;
                case /* uint64 reactions */ 9:
                    message.reactions = reader.uint64().toNumber();
                    break;
                case /* uint64 recasts */ 10:
                    message.recasts = reader.uint64().toNumber();
                    break;
                case /* uint64 watches */ 11:
                    message.watches = reader.uint64().toNumber();
                    break;
                case /* bool recast */ 12:
                    message.recast = reader.bool();
                    break;
                case /* omilos_grpc.ViewerContext viewer_context */ 13:
                    message.viewerContext = ViewerContext.internalBinaryRead(reader, reader.uint32(), options, message.viewerContext);
                    break;
                case /* google.protobuf.StringValue parent_author_display_name */ 14:
                    message.parentAuthorDisplayName = StringValue.internalBinaryRead(reader, reader.uint32(), options, message.parentAuthorDisplayName);
                    break;
                case /* google.protobuf.UInt64Value parent_author_fid */ 15:
                    message.parentAuthorFid = UInt64Value.internalBinaryRead(reader, reader.uint32(), options, message.parentAuthorFid);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Cast, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).uint64(message.id);
        /* string hash = 2; */
        if (message.hash !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.hash);
        /* string thread_hash = 3; */
        if (message.threadHash !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.threadHash);
        /* google.protobuf.UInt64Value parent_id = 4; */
        if (message.parentId)
            UInt64Value.internalBinaryWrite(message.parentId, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* omilos_grpc.Author author = 5; */
        if (message.author)
            Author.internalBinaryWrite(message.author, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* string text = 6; */
        if (message.text !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.text);
        /* google.protobuf.Timestamp published_at = 7; */
        if (message.publishedAt)
            Timestamp.internalBinaryWrite(message.publishedAt, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* uint64 replies = 8; */
        if (message.replies !== 0)
            writer.tag(8, WireType.Varint).uint64(message.replies);
        /* uint64 reactions = 9; */
        if (message.reactions !== 0)
            writer.tag(9, WireType.Varint).uint64(message.reactions);
        /* uint64 recasts = 10; */
        if (message.recasts !== 0)
            writer.tag(10, WireType.Varint).uint64(message.recasts);
        /* uint64 watches = 11; */
        if (message.watches !== 0)
            writer.tag(11, WireType.Varint).uint64(message.watches);
        /* bool recast = 12; */
        if (message.recast !== false)
            writer.tag(12, WireType.Varint).bool(message.recast);
        /* omilos_grpc.ViewerContext viewer_context = 13; */
        if (message.viewerContext)
            ViewerContext.internalBinaryWrite(message.viewerContext, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.StringValue parent_author_display_name = 14; */
        if (message.parentAuthorDisplayName)
            StringValue.internalBinaryWrite(message.parentAuthorDisplayName, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.UInt64Value parent_author_fid = 15; */
        if (message.parentAuthorFid)
            UInt64Value.internalBinaryWrite(message.parentAuthorFid, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.Cast
 */
export const Cast = new Cast$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ViewerContext$Type extends MessageType<ViewerContext> {
    constructor() {
        super("omilos_grpc.ViewerContext", [
            { no: 1, name: "reacted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "recast", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "watched", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<ViewerContext>): ViewerContext {
        const message = { reacted: false, recast: false, watched: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ViewerContext>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ViewerContext): ViewerContext {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool reacted */ 1:
                    message.reacted = reader.bool();
                    break;
                case /* bool recast */ 2:
                    message.recast = reader.bool();
                    break;
                case /* bool watched */ 3:
                    message.watched = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ViewerContext, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool reacted = 1; */
        if (message.reacted !== false)
            writer.tag(1, WireType.Varint).bool(message.reacted);
        /* bool recast = 2; */
        if (message.recast !== false)
            writer.tag(2, WireType.Varint).bool(message.recast);
        /* bool watched = 3; */
        if (message.watched !== false)
            writer.tag(3, WireType.Varint).bool(message.watched);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.ViewerContext
 */
export const ViewerContext = new ViewerContext$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Author$Type extends MessageType<Author> {
    constructor() {
        super("omilos_grpc.Author", [
            { no: 1, name: "fid", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "username", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "display_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "profile_picture", kind: "message", T: () => ProfilePicture },
            { no: 5, name: "follower_count", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 6, name: "following_count", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<Author>): Author {
        const message = { fid: 0, username: "", displayName: "", followerCount: 0, followingCount: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Author>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Author): Author {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 fid */ 1:
                    message.fid = reader.uint64().toNumber();
                    break;
                case /* string username */ 2:
                    message.username = reader.string();
                    break;
                case /* string display_name */ 3:
                    message.displayName = reader.string();
                    break;
                case /* omilos_grpc.ProfilePicture profile_picture */ 4:
                    message.profilePicture = ProfilePicture.internalBinaryRead(reader, reader.uint32(), options, message.profilePicture);
                    break;
                case /* uint64 follower_count */ 5:
                    message.followerCount = reader.uint64().toNumber();
                    break;
                case /* uint64 following_count */ 6:
                    message.followingCount = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Author, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 fid = 1; */
        if (message.fid !== 0)
            writer.tag(1, WireType.Varint).uint64(message.fid);
        /* string username = 2; */
        if (message.username !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.username);
        /* string display_name = 3; */
        if (message.displayName !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.displayName);
        /* omilos_grpc.ProfilePicture profile_picture = 4; */
        if (message.profilePicture)
            ProfilePicture.internalBinaryWrite(message.profilePicture, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* uint64 follower_count = 5; */
        if (message.followerCount !== 0)
            writer.tag(5, WireType.Varint).uint64(message.followerCount);
        /* uint64 following_count = 6; */
        if (message.followingCount !== 0)
            writer.tag(6, WireType.Varint).uint64(message.followingCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.Author
 */
export const Author = new Author$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProfilePicture$Type extends MessageType<ProfilePicture> {
    constructor() {
        super("omilos_grpc.ProfilePicture", [
            { no: 1, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "verified", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<ProfilePicture>): ProfilePicture {
        const message = { url: "", verified: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ProfilePicture>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProfilePicture): ProfilePicture {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string url */ 1:
                    message.url = reader.string();
                    break;
                case /* bool verified */ 2:
                    message.verified = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProfilePicture, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string url = 1; */
        if (message.url !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.url);
        /* bool verified = 2; */
        if (message.verified !== false)
            writer.tag(2, WireType.Varint).bool(message.verified);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message omilos_grpc.ProfilePicture
 */
export const ProfilePicture = new ProfilePicture$Type();
/**
 * @generated ServiceType for protobuf service omilos_grpc.Omilos
 */
export const Omilos = new ServiceType("omilos_grpc.Omilos", [
    { name: "Login", options: {}, I: LoginRequest, O: LoginResponse },
    { name: "PostCast", options: {}, I: PostCastRequest, O: Cast },
    { name: "LikeCast", options: {}, I: LikeCastRequest, O: LikeCastResponse },
    { name: "GetMe", options: {}, I: GetMeRequest, O: User },
    { name: "GetNotifications", options: {}, I: GetNotificationsRequest, O: Notifications },
    { name: "GetUser", options: {}, I: GetUserRequest, O: User },
    { name: "GetCast", options: {}, I: GetCastRequest, O: Cast },
    { name: "GetCasts", options: {}, I: GetCastsRequest, O: Casts }
]);
